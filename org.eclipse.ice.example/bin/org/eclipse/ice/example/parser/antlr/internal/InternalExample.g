/*
 * generated by Xtext 2.9.2
 */
grammar InternalExample;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.eclipse.ice.example.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.ice.example.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.ice.example.services.ExampleGrammarAccess;

}

@parser::members {

 	private ExampleGrammarAccess grammarAccess;

    public InternalExampleParser(TokenStream input, ExampleGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Input";
   	}

   	@Override
   	protected ExampleGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInputAccess().getInputAction_0(),
					$current);
			}
		)
		(
			this_NEWLINE_1=RULE_NEWLINE
			{
				newLeafNode(this_NEWLINE_1, grammarAccess.getInputAccess().getNEWLINETerminalRuleCall_1());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInputAccess().getSectionsSectionParserRuleCall_2_0());
				}
				lv_sections_2_0=ruleSection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputRule());
					}
					add(
						$current,
						"sections",
						lv_sections_2_0,
						"org.eclipse.ice.example.Example.Section");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionRule()); }
	iv_ruleSection=ruleSection
	{ $current=$iv_ruleSection.current; }
	EOF;

// Rule Section
ruleSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_OPEN_0=RULE_OPEN
			{
				newLeafNode(this_OPEN_0, grammarAccess.getSectionAccess().getOPENTerminalRuleCall_0());
			}
		)+
		(
			(
				lv_sectionName_1_0=RULE_ID
				{
					newLeafNode(lv_sectionName_1_0, grammarAccess.getSectionAccess().getSectionNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSectionRule());
					}
					setWithLastConsumed(
						$current,
						"sectionName",
						lv_sectionName_1_0,
						"org.eclipse.ice.example.Example.ID");
				}
			)
		)+
		this_CLOSE_2=RULE_CLOSE
		{
			newLeafNode(this_CLOSE_2, grammarAccess.getSectionAccess().getCLOSETerminalRuleCall_2());
		}
		(
			(
				this_NEWLINE_3=RULE_NEWLINE
				{
					newLeafNode(this_NEWLINE_3, grammarAccess.getSectionAccess().getNEWLINETerminalRuleCall_3_0());
				}
			)+
			(
				(
					{
						newCompositeNode(grammarAccess.getSectionAccess().getLinesLineParserRuleCall_3_1_0());
					}
					lv_lines_4_0=ruleLine
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSectionRule());
						}
						add(
							$current,
							"lines",
							lv_lines_4_0,
							"org.eclipse.ice.example.Example.Line");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		(
			this_NEWLINE_5=RULE_NEWLINE
			{
				newLeafNode(this_NEWLINE_5, grammarAccess.getSectionAccess().getNEWLINETerminalRuleCall_4());
			}
		)+
	)
;

// Entry rule entryRuleLine
entryRuleLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLineRule()); }
	iv_ruleLine=ruleLine
	{ $current=$iv_ruleLine.current; }
	EOF;

// Rule Line
ruleLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_varName_0_0=RULE_ID
				{
					newLeafNode(lv_varName_0_0, grammarAccess.getLineAccess().getVarNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLineRule());
					}
					setWithLastConsumed(
						$current,
						"varName",
						lv_varName_0_0,
						"org.eclipse.ice.example.Example.ID");
				}
			)
		)+
		(
			this_ASSIGN_1=RULE_ASSIGN
			{
				newLeafNode(this_ASSIGN_1, grammarAccess.getLineAccess().getASSIGNTerminalRuleCall_1());
			}
		)+
		(
			(
				lv_value_2_0=RULE_TEXT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getLineAccess().getValueTEXTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLineRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.ice.example.Example.TEXT");
				}
			)
		)
	)
;

RULE_ID : ('A'..'Z'|'a'..'z') ('A'..'Z'|'a'..'z'|'_'|'-'|'0'..'9');

RULE_TEXT : (RULE_WHITESPACE+|RULE_STRING+)*;

RULE_NEWLINE : '\r'? '\n'+;

RULE_WHITESPACE : (' '|'\t')+;

RULE_OPEN : '[';

RULE_CLOSE : ']';

RULE_ASSIGN : '=';

RULE_COMMENT : '#' (RULE_WHITESPACE+|RULE_STRING+)*;

RULE_INT : ('0'..'9')+;

fragment RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

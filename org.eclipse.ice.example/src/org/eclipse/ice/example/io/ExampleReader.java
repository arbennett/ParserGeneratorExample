/*******************************************************************************
 * Copyright (c) 2014 UT-Battelle, LLC.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Initial API and implementation and/or initial documentation - Jay Jay Billings,
 *   Jordan H. Deyton, Dasha Gorin, Alexander J. McCaskey, Taylor Patterson,
 *   Claire Saunders, Matthew Wang, Anna Wojtowicz
 *******************************************************************************/
package org.eclipse.ice.example.io;

import org.eclipse.ice.io.serializable.IReader;
import org.eclipse.xtext.parser.IParseResult;
import org.eclipse.xtext.parser.IParser;
import org.eclipse.xtext.parser.ParseException;

import com.google.inject.Inject;
import com.google.inject.Injector;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import org.eclipse.core.resources.IFile;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.ice.datastructures.entry.IEntry;
import org.eclipse.ice.datastructures.form.Form;
import org.eclipse.ice.example.ExampleStandaloneSetupGenerated;

/**
 * Generated class to read Example files.  This class was generated
 * with Eclipse ICE's Parser Generator plugin.
 */
class ExampleReader implements IReader {
	
	/**
	 * Basic constructor
	 */
	public ExampleReader() {
		super();	
	}
			
	/**
	 * Read the given file and return a completed form.
	 * This method makes use of the inner class ExampleParser,
	 * which provides a wrapper for the Xtext generated parser
	 * class for Example.
	 */
	public Form read(IFile ifile) {
		if (ifile == null) {
			return null;
		}
		Form form = new Form();
		
		FileReader r;
		try {
			r = new FileReader(new File(ifile.getLocation().toOSString()));
			ExampleParser p = new ExampleParser();
			EObject fileContents = p.parse(r);
			TreeIterator<EObject> ti = fileContents.eAllContents();
			
			EObject eo;
			while(ti.hasNext()) {
				eo = ti.next();
			}
			
		} catch (FileNotFoundException e1) {
			e1.printStackTrace();
		} catch (IOException e2) {
			e2.printStackTrace();
		}
		
		return form;
	}
	
	/**
	 * Search through the file for occurrences of the given
	 * regular expression.
	 */
	@Override
	public ArrayList<IEntry> findAll(IFile file, String regex) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * Tell us what kind of reader this is
	 */
	@Override
	public String getReaderType() {
		// TODO Auto-generated method stub
		return "ExampleReader";
	}
	
	/**
	 * Provides a wrapper for the Xtext generated parser. 
	 */
	private class ExampleParser {
		@Inject
		private IParser parser;
		
		/**
		 * Constructor that handles dependency injection via the
		 * standalone setup object generated by Xtext
		 */
		public ExampleParser() {
			ExampleStandaloneSetupGenerated issg = new ExampleStandaloneSetupGenerated();
			Injector injector = issg.createInjectorAndDoEMFRegistration();
			injector.injectMembers(this);	
		}
		
		/**
		 * 
		 * @param rdr
		 * @return
		 * @throws IOException
		 */
		public EObject parse(FileReader rdr) throws IOException {
			IParseResult result = parser.parse(rdr);
			if (result.hasSyntaxErrors()) {
				throw new ParseException("ERROR: ExampleParser ould not parse file!");		
			}	
			return result.getRootASTElement();
		}
		
	}
}
